==6402== Memcheck, a memory error detector
==6402== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==6402== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==6402== Command: ./stepone 2
==6402== 
==6402== Invalid write of size 1
==6402==    at 0x4847C0E: strcat (vg_replace_strmem.c:333)
==6402==    by 0x1094BC: string_append (better_string.c:38)
==6402==    by 0x109CCF: lexer_create_id (lexer.c:63)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402==  Address 0x4a6e8ca is 0 bytes after a block of size 10 alloc'd
==6402==    at 0x48469B3: calloc (vg_replace_malloc.c:1554)
==6402==    by 0x109363: init_string (better_string.c:14)
==6402==    by 0x109B08: lexer_create_id (lexer.c:55)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402== 
==6402== Invalid read of size 1
==6402==    at 0x4847BE4: strcat (vg_replace_strmem.c:333)
==6402==    by 0x1094BC: string_append (better_string.c:38)
==6402==    by 0x109CCF: lexer_create_id (lexer.c:63)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402==  Address 0x4a6e8ca is 0 bytes after a block of size 10 alloc'd
==6402==    at 0x48469B3: calloc (vg_replace_malloc.c:1554)
==6402==    by 0x109363: init_string (better_string.c:14)
==6402==    by 0x109B08: lexer_create_id (lexer.c:55)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402== 
==6402== Invalid write of size 1
==6402==    at 0x4847BFC: strcat (vg_replace_strmem.c:333)
==6402==    by 0x1094BC: string_append (better_string.c:38)
==6402==    by 0x109CCF: lexer_create_id (lexer.c:63)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402==  Address 0x4a6e8ca is 0 bytes after a block of size 10 alloc'd
==6402==    at 0x48469B3: calloc (vg_replace_malloc.c:1554)
==6402==    by 0x109363: init_string (better_string.c:14)
==6402==    by 0x109B08: lexer_create_id (lexer.c:55)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
==6402== 
--6402-- VALGRIND INTERNAL ERROR: Valgrind received a signal 11 (SIGSEGV) - exiting
--6402-- si_code=128;  Faulting address: 0x0;  sp: 0x1002ca9e10

valgrind: the 'impossible' happened:
   Killed by fatal signal

host stacktrace:
==6402==    at 0x5804CE27: get_bszB_as_is (m_mallocfree.c:302)
==6402==    by 0x5804CE27: get_bszB (m_mallocfree.c:314)
==6402==    by 0x5804CE27: vgPlain_arena_malloc (m_mallocfree.c:1819)
==6402==    by 0x5800510C: vgMemCheck_new_block (mc_malloc_wrappers.c:370)
==6402==    by 0x580052FE: vgMemCheck_malloc (mc_malloc_wrappers.c:405)
==6402==    by 0x580A067D: do_client_request (scheduler.c:1979)
==6402==    by 0x580A067D: vgPlain_scheduler (scheduler.c:1542)
==6402==    by 0x580E587D: thread_wrapper (syswrap-linux.c:102)
==6402==    by 0x580E587D: run_a_thread_NORETURN (syswrap-linux.c:155)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 6402)
==6402==    at 0x4841848: malloc (vg_replace_malloc.c:431)
==6402==    by 0x10BDA1: init_token (token.c:8)
==6402==    by 0x109A9D: lexer_create_token (lexer.c:46)
==6402==    by 0x109E08: lexer_create_id (lexer.c:79)
==6402==    by 0x10A1B9: lexer_get_next (lexer.c:161)
==6402==    by 0x10A53A: main (main.c:23)
client stack range: [0x1FFEFFE000 0x1FFF000FFF] client SP: 0x1FFEFFFCF0
valgrind stack range: [0x1002BAA000 0x1002CA9FFF] top usage: 10000 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

