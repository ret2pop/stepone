==2335== Memcheck, a memory error detector
==2335== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==2335== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==2335== Command: ./stepone
==2335== 
==2335== Invalid read of size 8
==2335==    at 0x10984D: ast_free (ast.c:156)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10972B: ast_free (ast.c:114)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10AC67: main (main.c:59)
==2335==  Address 0x4a6e808 is 56 bytes inside a block of size 96 free'd
==2335==    at 0x484412F: free (vg_replace_malloc.c:974)
==2335==    by 0x109839: ast_free (ast.c:153)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10972B: ast_free (ast.c:114)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10AC67: main (main.c:59)
==2335==  Block was alloc'd at
==2335==    at 0x48469B3: calloc (vg_replace_malloc.c:1554)
==2335==    by 0x109299: init_ast (ast.c:7)
==2335==    by 0x10BD9B: parse_math_expr (parser.c:402)
==2335==    by 0x10BD31: parse_math_expr (parser.c:395)
==2335==    by 0x10AEC6: parse_inside_block (parser.c:64)
==2335==    by 0x10B3BD: parse_block (parser.c:184)
==2335==    by 0x10B7C5: parse_function_dec (parser.c:264)
==2335==    by 0x10C49E: parse_expr (parser.c:553)
==2335==    by 0x10C645: parse_all (parser.c:595)
==2335==    by 0x10AC4B: main (main.c:57)
==2335== 
==2335== Invalid read of size 8
==2335==    at 0x109851: ast_free (ast.c:156)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10972B: ast_free (ast.c:114)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10AC67: main (main.c:59)
==2335==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2335== 
==2335== 
==2335== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==2335==  Access not within mapped region at address 0x0
==2335==    at 0x109851: ast_free (ast.c:156)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109780: ast_free (ast.c:135)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10972B: ast_free (ast.c:114)
==2335==    by 0x109679: ast_free (ast.c:103)
==2335==    by 0x10AC67: main (main.c:59)
==2335==  If you believe this happened as a result of a stack
==2335==  overflow in your program's main thread (unlikely but
==2335==  possible), you can try to increase the size of the
==2335==  main thread stack using the --main-stacksize= flag.
==2335==  The main thread stack size used in this run was 8388608.
==2335== 
==2335== HEAP SUMMARY:
==2335==     in use at exit: 5,006 bytes in 18 blocks
==2335==   total heap usage: 90 allocs, 72 frees, 6,708 bytes allocated
==2335== 
==2335== LEAK SUMMARY:
==2335==    definitely lost: 96 bytes in 1 blocks
==2335==    indirectly lost: 30 bytes in 2 blocks
==2335==      possibly lost: 0 bytes in 0 blocks
==2335==    still reachable: 4,880 bytes in 15 blocks
==2335==         suppressed: 0 bytes in 0 blocks
==2335== Rerun with --leak-check=full to see details of leaked memory
==2335== 
==2335== For lists of detected and suppressed errors, rerun with: -s
==2335== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
