==25291== Memcheck, a memory error detector
==25291== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==25291== Using Valgrind-3.21.0 and LibVEX; rerun with -h for copyright info
==25291== Command: ./stepone
==25291== 
==25291== Use of uninitialised value of size 8
==25291==    at 0x10BACD: final_optree (parser.c:345)
==25291==    by 0x10BC9A: final_optree (parser.c:374)
==25291==    by 0x10BFFD: parse_math_expr (parser.c:449)
==25291==    by 0x10BD16: parse_math_expr (parser.c:391)
==25291==    by 0x10AEC6: parse_inside_block (parser.c:63)
==25291==    by 0x10B3BD: parse_block (parser.c:183)
==25291==    by 0x10B7C5: parse_function_dec (parser.c:260)
==25291==    by 0x10C484: parse_expr (parser.c:550)
==25291==    by 0x10C624: parse_all (parser.c:592)
==25291==    by 0x10AC4B: main (main.c:57)
==25291== 
==25291== Invalid read of size 4
==25291==    at 0x10BACD: final_optree (parser.c:345)
==25291==    by 0x10BC9A: final_optree (parser.c:374)
==25291==    by 0x10BFFD: parse_math_expr (parser.c:449)
==25291==    by 0x10BD16: parse_math_expr (parser.c:391)
==25291==    by 0x10AEC6: parse_inside_block (parser.c:63)
==25291==    by 0x10B3BD: parse_block (parser.c:183)
==25291==    by 0x10B7C5: parse_function_dec (parser.c:260)
==25291==    by 0x10C484: parse_expr (parser.c:550)
==25291==    by 0x10C624: parse_all (parser.c:592)
==25291==    by 0x10AC4B: main (main.c:57)
==25291==  Address 0x50 is not stack'd, malloc'd or (recently) free'd
==25291== 
==25291== 
==25291== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==25291==  Access not within mapped region at address 0x50
==25291==    at 0x10BACD: final_optree (parser.c:345)
==25291==    by 0x10BC9A: final_optree (parser.c:374)
==25291==    by 0x10BFFD: parse_math_expr (parser.c:449)
==25291==    by 0x10BD16: parse_math_expr (parser.c:391)
==25291==    by 0x10AEC6: parse_inside_block (parser.c:63)
==25291==    by 0x10B3BD: parse_block (parser.c:183)
==25291==    by 0x10B7C5: parse_function_dec (parser.c:260)
==25291==    by 0x10C484: parse_expr (parser.c:550)
==25291==    by 0x10C624: parse_all (parser.c:592)
==25291==    by 0x10AC4B: main (main.c:57)
==25291==  If you believe this happened as a result of a stack
==25291==  overflow in your program's main thread (unlikely but
==25291==  possible), you can try to increase the size of the
==25291==  main thread stack using the --main-stacksize= flag.
==25291==  The main thread stack size used in this run was 8388608.
==25291== 
==25291== HEAP SUMMARY:
==25291==     in use at exit: 1,386 bytes in 36 blocks
==25291==   total heap usage: 78 allocs, 42 frees, 2,212 bytes allocated
==25291== 
==25291== LEAK SUMMARY:
==25291==    definitely lost: 0 bytes in 0 blocks
==25291==    indirectly lost: 0 bytes in 0 blocks
==25291==      possibly lost: 0 bytes in 0 blocks
==25291==    still reachable: 1,386 bytes in 36 blocks
==25291==         suppressed: 0 bytes in 0 blocks
==25291== Rerun with --leak-check=full to see details of leaked memory
==25291== 
==25291== Use --track-origins=yes to see where uninitialised values come from
==25291== For lists of detected and suppressed errors, rerun with: -s
==25291== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
